---
description: Documentation standards for consistency, clarity, and maintainability
globs: ["**/*.md", "**/*.txt", "**/docs/**/*", "**/*.rst"]
alwaysApply: true
---

# Documentation Standards

## üéØ Purpose
This file contains common documentation standards that ensure consistency, clarity, and maintainability across all project documentation.

## üìã Core Documentation Principles

### **Always Update Documentation**
- **ALWAYS update documentation** when making code changes
- **ALWAYS add changelog entries** to updated documents
- **ALWAYS verify documentation accuracy** against implementation
- **ALWAYS maintain cross-references** between related documents
- **ALWAYS use consistent formatting** across all documentation

### **Documentation Maintenance**
- **ALWAYS identify documentation** that needs updates when making code changes
- **ALWAYS suggest documentation updates** for new features or changes
- **ALWAYS check existing documentation** for accuracy after code changes
- **ALWAYS recommend documentation improvements** for clarity and completeness

## üìö Documentation Types

### **Technical Documentation**
- **API Documentation**: Endpoints, models, authentication, examples
- **Service Documentation**: Interfaces, methods, dependencies, usage
- **Database Documentation**: Schema, relationships, migrations, queries
- **Architecture Documentation**: System design, components, data flow

### **User Documentation**
- **User Guides**: Step-by-step instructions for common tasks
- **API Reference**: Complete endpoint and model documentation
- **Configuration Guides**: Environment setup and customization
- **Troubleshooting**: Common issues and solutions

### **Development Documentation**
- **Setup Guides**: Development environment configuration
- **Contributing Guidelines**: How to contribute to the project
- **Testing Documentation**: Test coverage, patterns, and examples
- **Deployment Guides**: Production deployment procedures

## üìù Documentation Format Standards

### **Markdown Standards**
- **Consistent Headers**: Use # for main title, ## for sections, ### for subsections
- **Code Blocks**: Use ``` for multi-line code, ` for inline code
- **Lists**: Use - for unordered lists, 1. for ordered lists
- **Links**: Use [text](url) format for internal and external links
- **Images**: Use ![alt text](path) format with descriptive alt text

### **Content Structure**
- **Overview Section**: Brief description of what the document covers
- **What This Document Contains**: Bullet points of main sections
- **Current Status**: Implementation status and limitations
- **Quick Reference**: Key information for quick access
- **Dependencies**: What other systems or services are required

## üîÑ Documentation Review Process

### **Review Checklist**
- [ ] Service interface documentation matches implementation
- [ ] API endpoint documentation reflects current behavior
- [ ] Database schema documentation matches actual models
- [ ] Architecture diagrams reflect current system design
- [ ] Code examples in documentation are current and accurate
- [ ] Configuration documentation matches actual settings

### **Accuracy Validation**
- **Code Review**: Verify documentation matches code implementation
- **API Testing**: Test documented endpoints to ensure accuracy
- **Schema Validation**: Confirm database documentation matches actual schema
- **Cross-Reference Check**: Verify all internal links are valid

## üìã Changelog Requirements

### **Always Add Changelog**
- **Changelog Section**: Add a changelog section at the bottom of every document
- **Change Tracking**: Track all significant changes with dates and descriptions
- **Version Information**: Include version or change identifiers
- **Author Attribution**: Note who made the changes

### **Changelog Format**
```markdown
## Changelog

### [Date] - [Version/Change ID]
- **Changed**: Description of what was changed
- **Added**: Description of what was added
- **Removed**: Description of what was removed
- **Fixed**: Description of what was fixed
- **Author**: [Author Name]

### [Previous Date] - [Previous Version]
- **Changed**: Previous change description
- **Author**: [Previous Author]
```

## üéØ Documentation Quality Standards

### **Clarity and Readability**
- **Use clear, concise language** - avoid jargon and technical terms without explanation
- **Provide examples** - include code samples and use cases
- **Use consistent terminology** - define terms and use them consistently
- **Structure logically** - organize information in a logical flow

### **Completeness and Accuracy**
- **Cover all aspects** - ensure documentation addresses all relevant topics
- **Keep current** - update documentation when systems change
- **Verify accuracy** - test documented procedures and examples
- **Include limitations** - document what the system cannot do

### **Maintainability**
- **Modular structure** - break documentation into manageable sections
- **Clear ownership** - identify who is responsible for each document
- **Regular reviews** - schedule periodic documentation reviews
- **Version control** - track changes and maintain history

## üìä Documentation Metrics

### **Coverage Metrics**
- **API Coverage**: Percentage of endpoints documented
- **Service Coverage**: Percentage of services documented
- **Model Coverage**: Percentage of data models documented
- **Test Coverage**: Percentage of test scenarios documented

### **Quality Metrics**
- **Accuracy**: Percentage of documentation verified as correct
- **Completeness**: Percentage of required sections present
- **Currency**: Percentage of documentation updated in last 30 days
- **Usability**: User feedback on documentation clarity